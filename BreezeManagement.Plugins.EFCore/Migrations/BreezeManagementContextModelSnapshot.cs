// <auto-generated />
using System;
using BreezeManagement.Plugins.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BreezeManagement.Plugins.EFCore.Migrations
{
    [DbContext(typeof(BreezeManagementContext))]
    partial class BreezeManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BreezeManagement.CoreBusiness.Models.Feature", b =>
                {
                    b.Property<int>("FeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeatureId"), 1L, 1);

                    b.Property<double>("AddedPrice")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("FeatureId");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            FeatureId = 1,
                            AddedPrice = 500.0,
                            Description = "Adds a luxurious sunroof to the vehicle",
                            FeatureName = "Sun Roof",
                            IsDeleted = false
                        },
                        new
                        {
                            FeatureId = 2,
                            AddedPrice = 600.0,
                            Description = "Installs additional cameras",
                            FeatureName = "Extra Cameras",
                            IsDeleted = false
                        },
                        new
                        {
                            FeatureId = 3,
                            AddedPrice = 75.5,
                            Description = "Adds heating to vehicle seats",
                            FeatureName = "Heated seats",
                            IsDeleted = false
                        },
                        new
                        {
                            FeatureId = 4,
                            AddedPrice = 500.0,
                            Description = "Adds the option of in-car wifi",
                            FeatureName = "WiFi",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("BreezeManagement.CoreBusiness.Models.FeatureAddition", b =>
                {
                    b.Property<int>("FeatureAdditionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeatureAdditionId"), 1L, 1);

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<double?>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("FeatureAdditionId");

                    b.HasIndex("FeatureId");

                    b.ToTable("FeatureAdditions");
                });

            modelBuilder.Entity("BreezeManagement.CoreBusiness.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfSales")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("BreezeManagement.CoreBusiness.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"), 1L, 1);

                    b.Property<string>("Colour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfManufacture")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Mileage")
                        .HasColumnType("float");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfOwners")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            VehicleId = 1,
                            Colour = "Red",
                            DateOfManufacture = new DateTime(2023, 3, 18, 18, 50, 41, 399, DateTimeKind.Local).AddTicks(6393),
                            IsDeleted = false,
                            Mileage = 5000.0,
                            ModelName = "Model A",
                            NumberOfOwners = 12,
                            Price = 15000.0,
                            Registration = "KJHG56A"
                        });
                });

            modelBuilder.Entity("BreezeManagement.CoreBusiness.Models.VehicleFeature", b =>
                {
                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.HasKey("VehicleId", "FeatureId");

                    b.HasIndex("FeatureId");

                    b.ToTable("VehicleFeature");

                    b.HasData(
                        new
                        {
                            VehicleId = 1,
                            FeatureId = 1
                        });
                });

            modelBuilder.Entity("BreezeManagement.CoreBusiness.Models.VehicleTransaction", b =>
                {
                    b.Property<int>("VehicleTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleTransactionId"), 1L, 1);

                    b.Property<string>("CreationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoneBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("VehicleTransactionId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleTransactions");
                });

            modelBuilder.Entity("BreezeManagement.CoreBusiness.Models.FeatureAddition", b =>
                {
                    b.HasOne("BreezeManagement.CoreBusiness.Models.Feature", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("BreezeManagement.CoreBusiness.Models.VehicleFeature", b =>
                {
                    b.HasOne("BreezeManagement.CoreBusiness.Models.Feature", "Feature")
                        .WithMany("VehicleFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BreezeManagement.CoreBusiness.Models.Vehicle", "Vehicle")
                        .WithMany("VehicleFeatures")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("BreezeManagement.CoreBusiness.Models.VehicleTransaction", b =>
                {
                    b.HasOne("BreezeManagement.CoreBusiness.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("BreezeManagement.CoreBusiness.Models.Feature", b =>
                {
                    b.Navigation("VehicleFeatures");
                });

            modelBuilder.Entity("BreezeManagement.CoreBusiness.Models.Vehicle", b =>
                {
                    b.Navigation("VehicleFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
