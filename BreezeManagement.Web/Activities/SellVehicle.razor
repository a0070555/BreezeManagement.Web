@page "/sellvehicle"
@using BreezeManagement.Web.ViewModels;

@inject ISellVehicleUseCase SellVehicleUseCase

<ErrorMessageComponent ErrorMessage="@errorMessage"></ErrorMessageComponent>
<h3>Sell Vehicle</h3>
<br/>
@if (sellViewModel != null)
{
    <EditForm Model="sellViewModel" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="po">Sales Order Number</label>
            <InputText id="po" @bind-Value="sellViewModel.SalesOrderNumber" class="form-control"></InputText>
        </div>


        <div class="form-group">
            <label for="veh">Vehicle to Sell</label>
            <ViewVehiclesComponent OnSelectVehicle="OnSelectVehicle"
                               DisplaySearchResult="true"></ViewVehiclesComponent>
            <InputText id="veh" class="form-control" @bind-Value="sellViewModel.VehicleName" disabled></InputText>
        </div>

        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="sellViewModel.VehiclePrice" class="form-control"></InputNumber>
        </div>
        <br />
        <button type="submit" class="btn btn-primary">Sell</button>

    </EditForm>
}


@code {
    private SellViewModel sellViewModel = new SellViewModel();
    private Vehicle selectedVehicle;
    private string errorMessage;

    private void OnValidSubmit()
    {
        SellVehicleUseCase.ExecuteAsync(this.sellViewModel.SalesOrderNumber,
            this.selectedVehicle,
            "Frank"
        );

        this.sellViewModel = new SellViewModel();
        this.selectedVehicle = null;
        this.errorMessage = string.Empty;
    }

    private void OnSelectVehicle(Vehicle product)
    {
        this.selectedVehicle = product;
        sellViewModel.VehicleId = product.VehicleId;
        sellViewModel.VehicleName = product.Registration;
        sellViewModel.VehiclePrice = product.Price;
    }
}
