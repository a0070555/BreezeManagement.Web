@inject NavigationManager NavigationManager
@inject IDeleteStaffUseCase DeleteStaffUseCase

@if (Staff != null)
{
    <tr>
        <td>@Staff.FirstName</td>
        <td>@Staff.LastName</td>
        <td>@Staff.PhoneNumber</td>
        <td>@Staff.DateOfBirth</td>
        <td>@Staff.Address</td>
        <td>@Staff.Title</td>
        <td>@Staff.Email</td>
        <td>@Staff.NumberOfSales</td>
        <td>
            <button type="button" class="button-add" @onclick="@(()=> EditStaff(Staff.StaffId))">
                <i class="fa-solid fa-pen-to-square" style="font-size:20px"></i>
            </button>
            <button type="button" class="button-add" @onclick="@(async ()=> await DeleteStaff(Staff))">
                    <i class="fa-solid fa-trash" style="font-size:20px; position:relative; left:0.6px; top:0.5px"></i>
            </button>
        </td>
    </tr>
}

@code {
    [Parameter]
    public Staff? Staff { get; set; }

    [Parameter]
    public EventCallback OnStaffDeleted { get; set; }

    private void EditStaff(int staffId)
    {
        NavigationManager.NavigateTo($"/editstaff/{staffId}");
    }

    private async Task DeleteStaff(Staff staff)
    {
        await DeleteStaffUseCase.ExecuteAsync(staff.StaffId);

        await OnStaffDeleted.InvokeAsync();
    }
}
