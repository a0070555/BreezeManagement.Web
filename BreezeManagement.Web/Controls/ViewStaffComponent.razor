@using BreezeManagement.CoreBusiness
@inject IViewStaffByNameUseCase ViewStaffByNameUseCase

<div class="page">
    <div class="field field_v1">
        <label for="staff" class="ha-screen-reader">Staff</label>
        <input class="field__input" placeholder="Type staff name here to search" @bind-value="staffNameToSearch" bind-value:event="oninput" />
        <span class="field__label-wrap" aria-hidden="true">
            <span class="field__label">Staff</span>
        </span>
    </div>
    <button type="button" class="button-add"
            @onclick="@( async()=> { await ViewStaff(); } )">
        <i class="fa-solid fa-magnifying-glass"></i> Search
    </button>
</div>

@if (this.DisplaySearchResult && _staff != null && selectedStaff == null)
{
        <div style="overflow-y:auto; max-height:300px; border:1px solid silver; padding-top:5px">
            <ul style="list-style-type:none">
            @foreach (var s in _staff)
            {
                        <li style="cursor:pointer" @onclick="@(async() => { await SelectStaff(s); })"
            @key="s.StaffId">@s.FullName</li>
            }
            </ul>
        </div>
}

@code {
    private string? _staffNameToSearch;
    public string staffNameToSearch
    {
        get => _staffNameToSearch;
        set
        {
            _staffNameToSearch = value;
            if (!string.IsNullOrWhiteSpace(_staffNameToSearch) &&
                _staffNameToSearch.Length > 2)
            {
                ViewStaff();
            }
        }
    }

    private List<Staff>? _staff;
    private Staff? selectedStaff;

    [Parameter]
    public EventCallback<List<Staff>> OnSearchStaff { get; set; }

    [Parameter]
    public bool DisplaySearchResult { get; set; } = false;

    [Parameter]
    public EventCallback<Staff> OnSelectStaff { get; set; }

    private async Task ViewStaff()
    {
        var staff = (await ViewStaffByNameUseCase
        .ExecuteAsync(staffNameToSearch ?? string.Empty)).ToList();

        await OnSearchStaff.InvokeAsync(staff);
        _staff = staff;
        this.selectedStaff = null;

        StateHasChanged();

    }

    private async Task SelectStaff(Staff staff)
    {
        await OnSelectStaff.InvokeAsync(staff);
        selectedStaff = staff;
    }
}
