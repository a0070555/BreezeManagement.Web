@page "/addfeature"

@attribute [Authorize]

@inject IAddFeatureUseCase AddFeatureUseCase
@inject NavigationManager NavigationManager

<h3>Add Feature</h3>
<br/>
@if (feature != null)
{
    <EditForm Model="feature" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Feature Name</label>
            <InputText id="name" @bind-Value="feature.FeatureName" class="form-control"></InputText>
        </div>


        <div class="form-group">
            <label for="desc">Description</label>
            <InputText id="desc" @bind-Value="feature.Description" class="form-control"></InputText>
        </div>


        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="feature.AddedPrice" class="form-control"></InputNumber>
        </div>
        <br />
        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}

@code {
    private Feature? feature;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        feature = new Feature();
    }

    private async Task OnValidSubmit()
    {
        if (this.feature != null)
        {
            await AddFeatureUseCase.ExecuteAsync(this.feature);
            NavigationManager.NavigateTo("/features");
        }
    }
}
