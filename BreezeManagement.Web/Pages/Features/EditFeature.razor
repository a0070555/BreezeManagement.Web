@page "/editfeature/{id:int}"

@attribute [Authorize]

@inject NavigationManager NavigationManager
@inject IViewFeaturesByIdUseCase ViewFeaturesByIdUseCase
@inject IEditFeatureUseCase EditFeatureUseCase

<h3>Edit Feature</h3>

@if (this.feature != null)
{
        <EditForm Model="feature" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>

            <div class="form-group">
                <label for="name">Feature Name</label>
                <InputText id="name" @bind-Value="feature.FeatureName" class="form-control"></InputText>
            </div>


            <div class="form-group">
                <label for="desc">Description</label>
                <InputText id="desc" @bind-Value="feature.Description" class="form-control"></InputText>
            </div>


            <div class="form-group">
                <label for="price">Price</label>
                <InputNumber id="price" @bind-Value="feature.AddedPrice" class="form-control"></InputNumber>
            </div>
            <br />
            <button type="submit" class="btn btn-primary">Save</button>
        </EditForm>
}

@code {
    private Feature feature;
    
    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        this.feature = await ViewFeaturesByIdUseCase.ExecuteAsync(this.Id);
    }

    public async Task OnValidSubmit()
    {
            await EditFeatureUseCase.ExecuteAsync(this.feature);
            NavigationManager.NavigateTo("/features");
    }
}
