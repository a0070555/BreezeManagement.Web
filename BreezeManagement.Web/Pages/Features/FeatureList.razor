@page "/features"

@attribute [Authorize]

@inject NavigationManager NavigationManager
@inject IViewFeaturesByNameUseCase ViewFeaturesByNameUseCase

<h3>Features</h3>
<br/>
<ViewFeaturesComponent
    OnSearchFeatures="OnSearchFeatures"></ViewFeaturesComponent>
<br/>
@if (listFeatures != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var feat in this.listFeatures)
            {
                <FeatureItemComponent Feature="feat"
                            OnFeatureDeleted="OnFeatureDeleted"></FeatureItemComponent>
            }
        </tbody>

    </table>
}
<br/>
<button type="button" class="button-add" @onclick="AddFeature">Add New</button>

@code {
    private List<Feature>? listFeatures;

    protected override async Task OnInitializedAsync()
    {
        var feats = await ViewFeaturesByNameUseCase.ExecuteAsync();
        this.listFeatures = feats.ToList();

    }

    private void OnSearchFeatures(List<Feature> features)
    {
        listFeatures = features;
    }

    private async Task OnFeatureDeleted()
    {
        await LoadFeatures();
    }

    private void AddFeature() 
    {
        NavigationManager.NavigateTo("/addfeature");
    }

    private async Task LoadFeatures()
    {
        var features = await ViewFeaturesByNameUseCase.ExecuteAsync();
        this.listFeatures = features.ToList();
    }

}
