@page "/"
@inject AuthenticationStateProvider AuthState
@inject IViewVehiclesByNameUseCase ViewVehiclesByNameUseCase
@inject ISearchVehicleTransactionsUseCase SearchVehicleTransactionsUseCase
@inject IViewStaffByNameUseCase ViewStaffByNameUseCase
@inject NavigationManager NavigationManager

@attribute [Authorize]
<head>
    <link rel="stylesheet" href="~/css/site.css" />
</head>

<PageTitle>Breeze Management</PageTitle>

<div class="container">
    <img src="Images/Logo.png" width="200" height="75" style="position:absolute; right:24px">
</div>

    <h1 style="position:center">Welcome, @Username!</h1>



<div id="login-container" style="position:absolute; top:175px">
    <h1>User Profile</h1>
  <div class="profile-img" style="background:url(@Picture)"></div>
    <div class="description" style="position:absolute; top:75px">
        @if (listStaff != null)
        {
            @foreach (var s in listStaff)
            {
                @if (s.Email == Username || s.FullName == Username)
                {
                    <p>Username: @Username</p>
                    <p>Full Name: @s.FullName</p>
                    <p>Title: @s.Title</p>
                    <p>Phone Number: @s.PhoneNumber</p>
                    <p>Date Of Birth: @s.DateOfBirth</p>
                    <p>Email address: @s.Email</p>
                    <p>Total Number of Sales: @s.NumberOfSales</p>
                }
            }
        }
  </div>
  <footer>
  </footer>
</div>

<div id="login-container" style="width:227px; position:absolute; left:420px; top:175px">
    <h1>Statistics</h1>
    @if (listVehicles != null)
    {
        <p>Total number of vehicles: @listVehicles.Count.ToString()</p> 
        <button class="button-21" @onclick="VehiclePage" style="width:190px">All Vehicles  <i class="fa-solid fa-arrow-right"></i></button>
    }
    
    @if (soldVehicles != null)
    {
        <p>Total sales today: @soldVehicles.Count.ToString()</p>
        <button class="button-21" @onclick="SalesPage" style="width:190px">Sales Reports  <i class="fa-solid fa-arrow-right"></i></button>
    }
    
    
    @if (listStaff != null)
    {
        <p>Total number of staff: @listStaff.Count.ToString()</p>
        <button class="button-21" @onclick="StaffPage" style="width:190px">All Staff  <i class="fa-solid fa-arrow-right"></i></button>
    }

    <footer>
    </footer>
</div>

<div id="login-container" style="width:850px; height:590px; position:absolute; left:668px; top:175px">

    @if (listVehicles != null)
    {
        <h1>Vehicle List</h1>
        <table class="table">
            <thead>
                <tr>
                    <th>Registration</th>
                    <th>Model Name</th>
                    <th>Colour</th>
                    <th>Price</th>
                    <th>Date Of Manufacture</th>
                    <th>Number Of Owners</th>
                    <th>Mileage</th>
                    <th></th>
                </tr>
            </thead>
            @foreach (var v in listVehicles)
            {
                <VehicleItemComponentViewOnly Vehicle="v"></VehicleItemComponentViewOnly>
            }
        </table>
    }
    
    <footer>
    </footer>
</div>

<br />


@code {
    private string Username = "Anonymous User";
    private string Picture = "";
    private List<Vehicle>? listVehicles;
    private List<Staff>? listStaff;
    private List<VehicleTransaction>? soldVehicles;

    protected override async Task OnInitializedAsync()
    {
        await LoadVehicles();
        await LoadStaff();
        await LoadSoldVehicles();
        var state = await AuthState.GetAuthenticationStateAsync();

        Username = state.User.Identity.Name ?? string.Empty;

        Picture = state.User.Claims
                    .Where(c => c.Type.Equals("picture"))
                    .Select(c => c.Value)
                    .FirstOrDefault() ?? string.Empty;

        await base.OnInitializedAsync();
    }

    private async Task LoadVehicles()
    {
        var vehs = await ViewVehiclesByNameUseCase.ExecuteAsync();
        this.listVehicles = vehs.ToList();
    }

    private async Task LoadStaff()
    {
        var staff = await ViewStaffByNameUseCase.ExecuteAsync();
        this.listStaff = staff.ToList();
    }

    private async Task LoadSoldVehicles()
    {
        var soldVehs = await SearchVehicleTransactionsUseCase.ExecuteAsync("", DateTime.Today , DateTime.Today);
        this.soldVehicles = soldVehs.ToList();
    }

    private void VehiclePage()
    {
        NavigationManager.NavigateTo("/vehicles");
    }

    private void SalesPage()
    {
        NavigationManager.NavigateTo("/vehiclereport");
    }

    private void StaffPage()
    {
        NavigationManager.NavigateTo("/staff");
    }
}