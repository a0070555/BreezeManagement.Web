@page "/editstaff/{id:int}"

@inject NavigationManager NavigationManager
@inject IViewStaffByIdUseCase ViewStaffByIdUseCase
@inject IEditStaffUseCase EditStaffUseCase

@attribute [Authorize]

<h3>Edit Staff</h3>
<br/>
@if (this.staff != null)
{
    <EditForm Model="staff" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="fname">First Name</label>
            <InputText id="fname" @bind-Value="staff.FirstName" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="lname">Last Name</label>
            <InputText id="lname" @bind-Value="staff.LastName" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="pnum">Phone Number</label>
            <InputText id="pnum" @bind-Value="staff.PhoneNumber" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="dob">Date Of Birth</label>
            <InputDate id="dob" @bind-Value="staff.DateOfBirth" class="form-control"></InputDate>
        </div>

        <div class="form-group">
            <label for="addr">Address</label>
            <InputText id="addr" @bind-Value="staff.Address" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="title">Title</label>
            <InputText id="title" @bind-Value="staff.Title" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="email">Email</label>
            <InputText id="email" @bind-Value="staff.Email" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="sales">Number Of Sales</label>
            <InputNumber id="sales" @bind-Value="staff.NumberOfSales" class="form-control"></InputNumber>
        </div>

        <br />
        <button type="submit" class="btn btn-primary">Save</button>

    </EditForm>
}

@code {
    private Staff staff;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        this.staff = await ViewStaffByIdUseCase.ExecuteAsync(this.Id);
    }

    private void OnValidSubmit()
    {
        EditStaffUseCase.ExecuteAsync(this.staff);
        NavigationManager.NavigateTo("/staff");
    }
}
